<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Share`18℃</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://share18.cc/"/>
  <updated>2018-03-30T02:52:35.445Z</updated>
  <id>http://share18.cc/</id>
  
  <author>
    <name>WoeiTsai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>信仰：静修日的默想</title>
    <link href="http://share18.cc/2018/03/30/Faith%E9%9D%99%E4%BF%AE%E6%97%A5%E9%BB%98%E6%83%B3%EF%BC%9A%E4%B8%80/"/>
    <id>http://share18.cc/2018/03/30/Faith静修日默想：一/</id>
    <published>2018-03-30T02:46:36.000Z</published>
    <updated>2018-03-30T02:52:35.445Z</updated>
    
    <content type="html"><![CDATA[<h2 id="静修日"><a href="#静修日" class="headerlink" title="静修日"></a>静修日</h2><p>受难周的第四日被称为静修日，在福音书里，没有详细的经文记述耶稣这一天在哪里，做了什么事情？因为人的好奇心，这是一个会更加被人猜想的的事件，耶稣在这天到底去了哪里？做了什么事情？有资料记载耶稣是去了距离耶路撒冷附近的伯大尼村，福音书中也常有描述耶稣在伯大尼。</p><blockquote><p>有一个患病的人，名叫拉撒路，住在伯大尼，就是马利亚和她姐姐马大的村庄。 (约翰福音 11:1 和合本)</p><p>逾越节前六日，耶稣来到伯大尼，就是他叫拉撒路从死里复活之处。 (约翰福音 12:1 和合本)</p><p>耶稣在伯大尼长大麻风的西门家里坐席的时候，有一个女人拿着一玉瓶至贵的真哪哒香膏来，打破玉瓶，把膏浇在耶稣的头上。 (马可福音 14:3 和合本)</p></blockquote><p>那么耶稣为什么经常驻足伯大尼呢？其实不难发现在耶稣很大程度是因着马大一家以及这里发生的另耶稣欣慰的事情。约翰福音11:5这么记载</p><blockquote><p>耶稣素来爱马大和她妹子并拉撒路。 (约翰福音 11:5 和合本)</p><p>马大伺候的事多，心里忙乱，就进前来，说：“主啊，我的妹子留下我一个人伺候，你不在意吗？请吩咐她来帮助我。”耶稣回答说：“马大！马大！你为许多的事思虑烦扰，但是不可少的只有一件；马利亚已经选择那上好的福分，是不能夺去的。”(路加福音 10:40-42 和合本)</p><p>她所做的，是尽她所能的；她是为我安葬的事把香膏预先浇在我身上。我实在告诉你们，普天之下，无论在什么地方传这福音，也要述说这女人所做的，以为记念。”(马可福音 14:8-9 和合本)</p></blockquote><p>耶稣在除了静修日这一天以外，每天都有和门徒对话，教训他们。唯独这天静默无声，可想这天的意义是非凡的。<br>在这样的一个世代里，我们里面的灵是否能像马大一家一样值得耶稣所驻足呢？<br>在这样的一个世代里，网络、娱乐、时间的碎片化，我们是否还能拿出像受难周里七分之一的时间来静修呢？<br>我想这两点很值得我们反省，我们忙于服侍为了事工能达到一个新的高度而努力，而把静修、与神独处的时间拿去，是否合适呢？<br><img src="http://7xt9j2.com1.z0.glb.clouddn.com/%E9%9D%99%E4%BF%AE%E6%97%A5.png" alt=""></p><h2 id="学会独处的生活"><a href="#学会独处的生活" class="headerlink" title="学会独处的生活"></a>学会独处的生活</h2><p>对于每次登山就畅快的我来说，我想更大的意义还是在于在山上我可以远离喧嚣，我们没有时间的碎片，我的生活只有走路、思考，我常常以此为喜乐并以此为爱好。若能长久如此那该多好，很残酷的是，生活并不是只有诗和远方更多是无比的琐碎。我想更重要的是在无比琐碎当中去需求灵的安静吧！这样一来独处就变得很重要，因为独处你不需要去山里，不需要去诗和远方，只需要离开手机和网络，离开朋友的赴约，每天花时间与神独处。我想你也不需要读很多的经文，你甚至只需要说，神，我来了，我就这样安歇在你的脚边。</p><blockquote><p>为什么你想看那些所不该有的事物呢？世界将要过去，情欲也要跟着过去肉体的情欲引诱我们出外游荡，但是时间过去之后，你所带回来的只是一颗不安的良心和散乱的精神罢了！乘兴而去，常是败兴而返，狂欢的夜晚带来了忧愁的早晨<br>——摘自《效法基督》</p></blockquote><p>乘兴而去，常是败兴而返，是多么写实的一句话。独居退休，照料自己，是比行神迹而忽略灵魂更好的事情。并不是号召大家隐居，而是我们需要有安静的时刻，因为此时你和神之间才没有俗世间隔，并且我们每个人都知道，与神没有间隔是我们所追求的。</p><hr><blockquote><p>© 著作權歸<a href="http://share18.cc">http://share18.cc/</a>所有 | 转载请注明出处</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;静修日&quot;&gt;&lt;a href=&quot;#静修日&quot; class=&quot;headerlink&quot; title=&quot;静修日&quot;&gt;&lt;/a&gt;静修日&lt;/h2&gt;&lt;p&gt;受难周的第四日被称为静修日，在福音书里，没有详细的经文记述耶稣这一天在哪里，做了什么事情？因为人的好奇心，这是一个会更加被人猜想的的
      
    
    </summary>
    
      <category term="信仰" scheme="http://share18.cc/categories/%E4%BF%A1%E4%BB%B0/"/>
    
    
      <category term="信仰" scheme="http://share18.cc/tags/%E4%BF%A1%E4%BB%B0/"/>
    
      <category term="上帝" scheme="http://share18.cc/tags/%E4%B8%8A%E5%B8%9D/"/>
    
  </entry>
  
  <entry>
    <title>MySql数据库使用基本：一</title>
    <link href="http://share18.cc/2018/03/29/SQL%EF%BC%9A%E4%B8%80/"/>
    <id>http://share18.cc/2018/03/29/SQL：一/</id>
    <published>2018-03-29T09:57:28.000Z</published>
    <updated>2018-03-29T09:57:50.245Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySql数据库使用"><a href="#MySql数据库使用" class="headerlink" title="MySql数据库使用"></a>MySql数据库使用</h2><h3 id="一、使用数据库"><a href="#一、使用数据库" class="headerlink" title="一、使用数据库"></a>一、使用数据库</h3><pre><code>use db_book;</code></pre><h3 id="二、删除数据库"><a href="#二、删除数据库" class="headerlink" title="二、删除数据库"></a>二、删除数据库</h3><pre><code>drop db_book;</code></pre><h3 id="三、显示表"><a href="#三、显示表" class="headerlink" title="三、显示表"></a>三、显示表</h3><pre><code>desc t_bookType;</code></pre><h3 id="四、显示创建表命令"><a href="#四、显示创建表命令" class="headerlink" title="四、显示创建表命令"></a>四、显示创建表命令</h3><pre><code>show create table t_bookType;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MySql数据库使用&quot;&gt;&lt;a href=&quot;#MySql数据库使用&quot; class=&quot;headerlink&quot; title=&quot;MySql数据库使用&quot;&gt;&lt;/a&gt;MySql数据库使用&lt;/h2&gt;&lt;h3 id=&quot;一、使用数据库&quot;&gt;&lt;a href=&quot;#一、使用数据库&quot; class
      
    
    </summary>
    
      <category term="MySql" scheme="http://share18.cc/categories/MySql/"/>
    
    
      <category term="代码" scheme="http://share18.cc/tags/%E4%BB%A3%E7%A0%81/"/>
    
      <category term="MySql" scheme="http://share18.cc/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>Python基础语法三：变量引用思想</title>
    <link href="http://share18.cc/2016/04/29/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%EF%BC%9A%E4%B8%89/"/>
    <id>http://share18.cc/2016/04/29/Python基础语法：三/</id>
    <published>2016-04-29T08:11:54.000Z</published>
    <updated>2016-05-01T04:44:59.831Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在Python并没有什么指针的概念，不同变量的引用都是指向开辟好的内存(注：Python事实上实现了自己的内存分配系统，它在操作系统内存堆上提供了另外一层抽象）。<br>如果你要将a = 1这个变量初始化，那么就会在内存中开辟一块空间给1，接着再将a = 2这个变量初始话，Python并不会把之前的1这个变量内存空间占用，而是会重新开辟一个a = 2的内存空间，那么问题就来了，如果在开辟一个b = 1的变量那么b会指向哪块内存呢？还是新开辟一块内存呢？<br>答案是仍然使用已经开辟好的1内存空间，也就是说1的内存空间被多个变量引用了，这就是Python的变量引用思想，那么我们来用程序验证下最终结果看看。</p><h2 id="程序验证"><a href="#程序验证" class="headerlink" title="程序验证"></a>程序验证</h2><pre><code>i = 0n = 3m = 0if id(i) &lt;&gt; id(n):print &apos;i和n的内存地址不相同，i：&apos;,id(i),&apos;n:&apos;,id(n)if id(i) == id(m):print &apos;i和m的内存地址相同，i：&apos;,id(i),&apos;m:&apos;,id(m)</code></pre><hr><p>输出结果：<br>i和n的内存地址不相同，i： 44398980 n: 44398944<br>i和m的内存地址相同，i： 44398980 m: 44398980</p><p>由结果可以看出同时为0的i和m的内存地址是一样的，也就是说都指向的一同一块内存，可以这么理解，i和m就像是同一个商品中的标签i标签和m标签，那么我们再来验证下，如果把某个标签撕掉，分配的内存会消失吗？</p><hr><pre><code>i = 0n = 3m = 0if id(i) &lt;&gt; id(n):    print &apos;i和n的内存地址不相同，i：&apos;,id(i),&apos;n:&apos;,id(n)if id(i) == id(m):    print &apos;i和m的内存地址相同，i：&apos;,id(i),&apos;m:&apos;,id(m)del iprint &apos;m的内存地址:&apos;,id(m)</code></pre><p>输出结果：<br>i和n的内存地址不相同，i： 22509956 n: 22509920<br>i和m的内存地址相同，i： 22509956 m: 22509956<br>m的内存地址: 22509956</p><p>可见撕掉m的标签内存还在，不存在消失的情况。<br>那么问题又来的，卧槽什么时候内存会被回收呢？java有回收机制Python有吗？答案是肯定的，只是回收机制不一样罢了。</p><h2 id="Python的内存回收机制"><a href="#Python的内存回收机制" class="headerlink" title="Python的内存回收机制"></a>Python的内存回收机制</h2><p>简单来说python里回收机制是以引用计数为主，标记-清除和分代收集两种机制为辅，下面主要说下计数。</p><hr><p>python里每一个东西都是对象，它们的核心就是一个结构体：PyObject，PyObject是每个对象必有的内容，其中ob_refcnt就是做为引用计数。</p><pre><code>typedef struct_object {        int ob_refcnt;        struct_typeobject *ob_type;}PyObject;</code></pre><p>当一个对象有新的引用时，它的ob_refcnt就会增加，当引用它的对象被删除，它的ob_refcnt就会减少。</p><pre><code>#define Py_INCREF(op)   ((op)-&gt;ob_refcnt++)      //增加计数#define Py_DECREF(op)      \                     //减少计数            if (--(op)-&gt;ob_refcnt != 0)             ;     else         __Py_Dealloc((PyObject *)(op))</code></pre><p>引用计数为0时，该对象生命就结束了。</p><ul><li>引用计数机制的优点 </li></ul><ol><li>简单</li><li>实时性：一旦没有引用，内存就直接释放了。不用像其他机制等到特定时机。实时性还带来一个好处：处理回收内存的时间分摊到了平时。</li></ol><ul><li>引用计数机制的缺点</li></ul><ol><li>维护引用计数消耗资源 </li><li>循环引用 </li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Python在科学计算和数据处理中用途广泛，而深入底层那些基础理念和算法，都应该感激那些六七十年代由麦卡锡等计算机先贤所作出的计算机科学开创性研究吧！</p><blockquote><p>© 著作權歸<a href="http://share18.cc">http://share18.cc/</a>所有 | 转载请注明出处</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;在Python并没有什么指针的概念，不同变量的引用都是指向开辟好的内存(注：Python事实上实现了自己的内存分配系统，它在操作系统内存堆上
      
    
    </summary>
    
      <category term="Python" scheme="http://share18.cc/categories/Python/"/>
    
    
      <category term="Python" scheme="http://share18.cc/tags/Python/"/>
    
      <category term="代码" scheme="http://share18.cc/tags/%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>古典古籍研究：《搜神祕覽-船山藏》</title>
    <link href="http://share18.cc/2016/04/28/%E5%8F%A4%E5%85%B8%E5%8F%A4%E7%B1%8D%E7%A0%94%E7%A9%B6%EF%BC%9A%E4%B8%80/"/>
    <id>http://share18.cc/2016/04/28/古典古籍研究：一/</id>
    <published>2016-04-28T15:11:54.000Z</published>
    <updated>2016-05-01T04:44:41.129Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原文："><a href="#原文：" class="headerlink" title="原文："></a>原文：</h2><p>五代離亂，兵革紛擾，豪商大賈往往以珍寶委棄深山大澤中，免罹喪亂，不可勝數。綿歷歲月，乃成變怪。今建州浦城縣之船山，一藏是也。山有赤人、赤馬、白人、白馬、牛羊之類，左右羅列，動以千百數，雜陳金寶，長曳數百步，而人未有得之者。山之垠常有字隱隱出於石間，村甿不能辯書者多見。之後有人見而記曰：“船山有一藏，或在南，或在北，有人拾得，富得一國。”至今存焉。胡人過是山，必拜而去。</p><h2 id="粗略译文："><a href="#粗略译文：" class="headerlink" title="粗略译文："></a>粗略译文：</h2><p>五代的时候经常出现战争叛乱，战争纷扰，富有的商人往往将珍宝藏在深山大泽中免得珍宝散乱的人不可胜数。经历了一定岁月，珍宝就变成了精怪。现南平市浦城县的船山，有一宝藏。山里面有赤人、赤马、白人、白马、牛羊之类的精怪，左右罗列，数以百计，亲近在珍宝的百步周围，没有人能得到。村里不识字的人在山边常常看得见有字隐藏在石头之间。后来有人看见就记下来了，说：：“船山有一藏，或在南，或在北，有人拾得，富得一國。”到现在这种说法还存在。<em>胡人</em>过这座山时，都要跪拜了才走。</p><h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>船山应该指的就是浦城县上同村的船山，唐黄巢起义前，浦城的拓岭古道仍是进福建的主要通道，中原战乱，有人迁居福建是很正常的，所以船山宝藏一说有一定可信度，但古船山和今天的船山位置是否一致比较难判断，依据之前昌平王过船山，有一女儿死在船山，后人把船山的某座山峰称为玉女峰，似乎可以确定大致范围，但山脉太长，如今也是不能具体考证了。</p><h2 id="船山位置图："><a href="#船山位置图：" class="headerlink" title="船山位置图："></a>船山位置图：</h2><p><img src="http://7xt9j2.com2.z0.glb.clouddn.com/%E8%88%B9%E5%B1%B1.png" alt=""></p><blockquote><p>© 著作權歸<a href="http://share18.cc">http://share18.cc/</a>所有 | 转载请注明出处</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;原文：&quot;&gt;&lt;a href=&quot;#原文：&quot; class=&quot;headerlink&quot; title=&quot;原文：&quot;&gt;&lt;/a&gt;原文：&lt;/h2&gt;&lt;p&gt;五代離亂，兵革紛擾，豪商大賈往往以珍寶委棄深山大澤中，免罹喪亂，不可勝數。綿歷歲月，乃成變怪。今建州浦城縣之船山，一藏是也。山有赤人
      
    
    </summary>
    
      <category term="古籍" scheme="http://share18.cc/categories/%E5%8F%A4%E7%B1%8D/"/>
    
    
      <category term="文言文" scheme="http://share18.cc/tags/%E6%96%87%E8%A8%80%E6%96%87/"/>
    
      <category term="浦城" scheme="http://share18.cc/tags/%E6%B5%A6%E5%9F%8E/"/>
    
  </entry>
  
  <entry>
    <title>Python基础语法二：条件选择与循环语句</title>
    <link href="http://share18.cc/2016/04/27/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%EF%BC%9A%E4%BA%8C/"/>
    <id>http://share18.cc/2016/04/27/Python基础语法：二/</id>
    <published>2016-04-27T08:11:54.000Z</published>
    <updated>2018-03-30T02:47:14.402Z</updated>
    
    <content type="html"><![CDATA[<h3 id="条件选择"><a href="#条件选择" class="headerlink" title="条件选择"></a>条件选择</h3><ul><li>if语句</li></ul><pre><code>i = 1if i &gt; 0 :    print &apos;i大于0&apos; </code></pre><ul><li>if else语句</li></ul><pre><code>i = 2if i &gt; 0 :    print &apos;i大于0&apos;else :    print &apos;i小于0&apos;</code></pre><ul><li>if elif语句</li></ul><pre><code>i = 3             if i == 4 :           print &apos;i等于4&apos;  elif i == 3 :         print &apos;i等于3&apos;  elif i == 2 :         print &apos;i等于2&apos;  </code></pre><h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><ul><li>for…in</li></ul><pre><code>code1：for test in &apos;love&apos; :          print &apos;当前字母：&apos; , test code2：num = [&apos;1&apos;,&apos;3&apos;,&apos;5&apos;,&apos;7&apos;]         for index in range(len(num)):       print &apos;当前数字：&apos; , num[index]  </code></pre><p>输出结果：<br>当前字母： l<br>当前字母： o<br>当前字母： v<br>当前字母： e </p><ul><li>while语句</li></ul><pre><code>i = 3                   while (i &lt; 30):             i = i+1             else:                       print &apos;跳出循环时的数字：&apos;,i     </code></pre><p>输出结果：30</p><ul><li>while中的continue</li></ul><pre><code>i = 1            while (i &lt; 10):         i = i+1          if i%2 &lt;&gt; 0:         continue     else:                print i  </code></pre><p>输出结果：2 4 6 8 </p><ul><li>while中的break</li></ul><pre><code>i = 0                        while (i &lt; 5):                   i += 1                       if i &gt; 3:                        print &apos;大于3跳出，此时i=&apos;,i         break                    else:                            print &apos;打印小于等于3的数：&apos;,i </code></pre><p>输出结果：<br>打印小于等于3的数： 1<br>打印小于等于3的数： 2<br>打印小于等于3的数： 3<br>大于3跳出，此时i= 4</p><ul><li>pass语句<br>Python pass是空语句，是为了保持程序结构的完整性。<br>pass 不做任何事情，一般用做占位语句。</li></ul><pre><code>for i in range(1,10):                              if i == 5 :                                        pass                                           print&apos;卧槽pass语句块下面是5吧，没事继续往下打印&apos;             print i                                        </code></pre><p>输出结果：<br>1<br>2<br>3<br>4<br>卧槽pass语句块下面是5吧，没事继续往下打印<br>5<br>6<br>7<br>8<br>9</p><blockquote><p>© 著作權歸<a href="http://share18.cc">http://share18.cc/</a>所有 | 转载请注明出处</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;条件选择&quot;&gt;&lt;a href=&quot;#条件选择&quot; class=&quot;headerlink&quot; title=&quot;条件选择&quot;&gt;&lt;/a&gt;条件选择&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;if语句&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;i = 1
if i &amp;gt; 0 :
    print
      
    
    </summary>
    
      <category term="Python" scheme="http://share18.cc/categories/Python/"/>
    
    
      <category term="Python" scheme="http://share18.cc/tags/Python/"/>
    
      <category term="代码" scheme="http://share18.cc/tags/%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Python基础语法一：基本函数</title>
    <link href="http://share18.cc/2016/04/22/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%EF%BC%9A%E4%B8%80/"/>
    <id>http://share18.cc/2016/04/22/Python基础语法：一/</id>
    <published>2016-04-22T08:11:54.000Z</published>
    <updated>2016-05-01T04:43:36.870Z</updated>
    
    <content type="html"><![CDATA[<h3 id="print-函数"><a href="#print-函数" class="headerlink" title="print()函数"></a>print()函数</h3><pre><code>print(&apos;Hello World&apos;)</code></pre><h3 id="raw-input-函数"><a href="#raw-input-函数" class="headerlink" title="raw_input()函数"></a>raw_input()函数</h3><pre><code>name=raw_input() #输入数据print(&apos;这是手动输入的数据：&apos;+name)</code></pre><h3 id="format-函数"><a href="#format-函数" class="headerlink" title="format()函数"></a>format()函数</h3><pre><code># 5是占位,2是小数点后多少位，左右对齐取决于占位print(format(12.345677,&apos;5.2f&apos;))</code></pre><p>输出结果：12.34</p><h3 id="os-system-函数"><a href="#os-system-函数" class="headerlink" title="os.system()函数"></a>os.system()函数</h3><pre><code>os.system(&quot;pause&quot;)</code></pre><p>执行结果：在windows下让命令行窗口暂停</p><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><pre><code>str = &apos;1&apos;print(int(str)+1)</code></pre><p>输出结果：2</p><h3 id="id-函数"><a href="#id-函数" class="headerlink" title="id()函数"></a>id()函数</h3><p>说明：获取变量的内存id即地址</p><h3 id="range-函数"><a href="#range-函数" class="headerlink" title="range()函数"></a>range()函数</h3><p>range()是一个内置函数，它可以生成某个范围内的数字列表。<br>比如说range(1,6)就会生成[1,2,3,4,5]这样一个列表，而range(8)会生成[0,1,2,3,4,5,6,7]这样一个列表。</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ul><li>1、变量指向的是内存地址</li><li>2、变量在定义时不需要指定数据类型</li></ul><blockquote><p>© 著作權歸<a href="http://share18.cc">http://share18.cc/</a>所有 | 转载请注明出处</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;print-函数&quot;&gt;&lt;a href=&quot;#print-函数&quot; class=&quot;headerlink&quot; title=&quot;print()函数&quot;&gt;&lt;/a&gt;print()函数&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;print(&amp;apos;Hello World&amp;apos;)
&lt;/cod
      
    
    </summary>
    
      <category term="Python" scheme="http://share18.cc/categories/Python/"/>
    
    
      <category term="Python" scheme="http://share18.cc/tags/Python/"/>
    
      <category term="代码" scheme="http://share18.cc/tags/%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Hexo个人博客如何进行文章发布</title>
    <link href="http://share18.cc/2016/04/21/Hexo%E5%8F%91%E5%B8%83/"/>
    <id>http://share18.cc/2016/04/21/Hexo发布/</id>
    <published>2016-04-21T09:29:32.000Z</published>
    <updated>2016-05-01T04:43:23.391Z</updated>
    
    <content type="html"><![CDATA[<h3 id="打开Git控制台程序"><a href="#打开Git控制台程序" class="headerlink" title="打开Git控制台程序"></a>打开Git控制台程序</h3><pre><code>D:\Program Files\Git\git-cmd.exe</code></pre><h3 id="进入Hexo工作目录"><a href="#进入Hexo工作目录" class="headerlink" title="进入Hexo工作目录"></a>进入Hexo工作目录</h3><pre><code>cd D:\StudyCode\CWoei.github.io</code></pre><h3 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h3><pre><code>hexo new post postName</code></pre><h3 id="为文章加入分类和标签"><a href="#为文章加入分类和标签" class="headerlink" title="为文章加入分类和标签"></a>为文章加入分类和标签</h3><pre><code>---title: aboutdate: 2016-04-21 17:13:06categories:- Hexotags:- GitHub- 博客---</code></pre><h3 id="编辑好以后使用命令生成静态文件"><a href="#编辑好以后使用命令生成静态文件" class="headerlink" title="编辑好以后使用命令生成静态文件"></a>编辑好以后使用命令生成静态文件</h3><pre><code>hexo generate</code></pre><h3 id="部署到Git"><a href="#部署到Git" class="headerlink" title="部署到Git"></a>部署到Git</h3><pre><code>hexo deploy</code></pre><blockquote><p>© 著作權歸<a href="http://share18.cc">http://share18.cc/</a>所有 | 转载请注明出处</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;打开Git控制台程序&quot;&gt;&lt;a href=&quot;#打开Git控制台程序&quot; class=&quot;headerlink&quot; title=&quot;打开Git控制台程序&quot;&gt;&lt;/a&gt;打开Git控制台程序&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;D:\Program Files\Git\git-cmd.e
      
    
    </summary>
    
      <category term="Hexo" scheme="http://share18.cc/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://share18.cc/tags/Hexo/"/>
    
      <category term="博客" scheme="http://share18.cc/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
